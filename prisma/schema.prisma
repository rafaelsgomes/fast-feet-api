// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id                     String         @id @default(uuid())
  name                   String
  document               String         @unique
  email                  String         @unique
  password               String
  roles                  Role[]         @default([USER])
  isDeliveryman          Boolean        @default(false)
  createdAt              DateTime       @default(now()) @map("created_at")
  updatedAt              DateTime?      @map("updated_at")
  recipient_deliveries   Delivery[]     @relation(name: "recipient")
  deliveryman_deliveries Delivery[]     @relation(name: "deliveryman")
  notifications          Notification[]

  @@map("users")
}

model Delivery {
  id                           String       @id @default(uuid())
  longitude                    Decimal
  latitude                     Decimal
  zipCode                      String       @map("zip_code")
  address                      String
  city                         String
  state                        String
  additionalAddressInformation String       @map("additional_address_information")
  recipientId                  String       @map("recipient_id")
  recipient                    User         @relation(name: "recipient", fields: [recipientId], references: [id])
  deliverymanId                String?      @map("deliveryman_id")
  deliveryman                  User?        @relation(name: "deliveryman", fields: [deliverymanId], references: [id])
  availableAt                  DateTime?    @map("available_at")
  pickupAt                     DateTime?    @map("pickup_at")
  deliveredAt                  DateTime?    @map("delivered_at")
  returnedAt                   DateTime?    @map("returned_at")
  createdAt                    DateTime     @default(now()) @map("created_at")
  updatedAt                    DateTime?    @map("updated_at")
  attachments                  Attachment[]

  @@map("deliveries")
}

model Attachment {
  id         String  @id @default(uuid())
  title      String
  url        String
  deliveryId String? @map("delivery_id")

  delivery Delivery? @relation(fields: [deliveryId], references: [id])

  @@map("attachments")
}

model Notification {
  id          String    @id @default(uuid())
  recipientId String    @map("recipient_id")
  title       String
  content     String
  readAt      DateTime? @map("read_at")
  createdAt   DateTime  @default(now()) @map("created_at")

  recipient User @relation(fields: [recipientId], references: [id])

  @@map("notifications")
}
